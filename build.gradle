plugins {
    id 'org.ajoberstar.grgit' version '4.0.2'
    id 'com.github.ben-manes.versions' version '0.27.0'
}

apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'java-library'

group 'net.minecraftforge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = grgit.describe(longDescr: true).split('-').with { "${it[0]}.${it[1]}" }

repositories {
    mavenCentral()
    maven {
        name = 'forge'
        url = 'https://files.minecraftforge.net/maven'
    }
}

jacoco {
    toolVersion = '0.8.2'
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

test {
    useJUnitPlatform()
}

ext.sharedManifest = manifest {
    attributes(['Specification-Title': 'forgespi',
                'Specification-Vendor': 'forge',
                'Specification-Version': '4', // Currently version 4 of the forgespi specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv('BUILD_NUMBER')?:0}+${grgit.branch.current().getName()}.${grgit.head().abbreviatedId}",
                'Implementation-Vendor': 'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': grgit.head().abbreviatedId,
                'Git-Branch': grgit.branch.current().getName(),
                'Build-Number': "${System.getenv('BUILD_NUMBER')?:0}"],
            "net/minecraftforge/forgespi/")
}

jar {
    manifest = project.manifest {
        from sharedManifest
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}


dependencies {
    implementation('cpw.mods:modlauncher:5.1.+')
    implementation('com.google.code.findbugs:jsr305:3.0.2')
    implementation('org.ow2.asm:asm:7.2')
    implementation('org.ow2.asm:asm-commons:7.2')
    implementation('org.ow2.asm:asm-tree:7.2')
    implementation('org.apache.logging.log4j:log4j-api:2.11.2')
    implementation('org.apache.maven:maven-artifact:3.6.3')


    testRuntimeOnly('org.apache.logging.log4j:log4j-core:2.11.2')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.+')
    testImplementation('org.powermock:powermock-core:2.0.+')
    testImplementation('org.hamcrest:hamcrest-core:2.2+')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.6.+')
}

artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            pom {
                name = 'Forge Service Provider Interface'
                description = 'API for services which can plug into forge, or which are used by forge in other places'
                url = 'https://github.com/MinecraftForge/ForgeSPI'
                scm {
                    url = 'https://github.com/MinecraftForge/ForgeSPI'
                    connection = 'scm:git:git://github.com/MinecraftForge/ForgeSPI.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/ForgeSPI.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/ForgeSPI/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.properties.forgeMavenUser?:'fake'
                password project.properties.forgeMavenPassword?:'news'
            }
            url 'http://files.minecraftforge.net/maven/manage/upload'
        }
    }
}